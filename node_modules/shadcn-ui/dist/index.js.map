{"version":3,"sources":["../src/index.ts","../src/utils/get-components.ts","../src/utils/get-package-info.ts","../src/utils/get-package-manager.ts","../src/utils/get-project-info.ts","../src/utils/logger.ts","../src/utils/templates.ts"],"sourcesContent":["#!/usr/bin/env node\nimport { existsSync, promises as fs } from \"fs\"\nimport path from \"path\"\nimport { Command } from \"commander\"\nimport { execa } from \"execa\"\nimport ora from \"ora\"\nimport prompts from \"prompts\"\n\nimport { Component, getAvailableComponents } from \"./utils/get-components\"\nimport { getPackageInfo } from \"./utils/get-package-info\"\nimport { getPackageManager } from \"./utils/get-package-manager\"\nimport { getProjectInfo } from \"./utils/get-project-info\"\nimport { logger } from \"./utils/logger\"\nimport { STYLES, TAILWIND_CONFIG, UTILS } from \"./utils/templates\"\n\nprocess.on(\"SIGINT\", () => process.exit(0))\nprocess.on(\"SIGTERM\", () => process.exit(0))\n\nconst PROJECT_DEPENDENCIES = [\n  \"tailwindcss-animate\",\n  \"class-variance-authority\",\n  \"clsx\",\n  \"tailwind-merge\",\n  \"lucide-react\",\n]\n\nasync function main() {\n  const packageInfo = await getPackageInfo()\n  const projectInfo = await getProjectInfo()\n  const packageManager = getPackageManager()\n\n  const program = new Command()\n    .name(\"shadcn-ui\")\n    .description(\"Add shadcn-ui components to your project\")\n    .version(\n      packageInfo.version || \"1.0.0\",\n      \"-v, --version\",\n      \"display the version number\"\n    )\n\n  program\n    .command(\"init\")\n    .description(\"Configure your Next.js project.\")\n    .option(\"-y, --yes\", \"Skip confirmation prompt.\")\n    .action(async (options) => {\n      logger.warn(\n        \"This command assumes a Next.js project with TypeScript and Tailwind CSS.\"\n      )\n      logger.warn(\n        \"If you don't have these, follow the manual steps at https://ui.shadcn.com/docs/installation.\"\n      )\n      logger.warn(\"\")\n\n      if (!options.yes) {\n        const { proceed } = await prompts({\n          type: \"confirm\",\n          name: \"proceed\",\n          message:\n            \"Running this command will install dependencies and overwrite your existing tailwind.config.js. Proceed?\",\n          initial: true,\n        })\n\n        if (!proceed) {\n          process.exit(0)\n        }\n      }\n\n      // Install dependencies.\n      const dependenciesSpinner = ora(`Installing dependencies...`).start()\n      await execa(packageManager, [\n        packageManager === \"npm\" ? \"install\" : \"add\",\n        ...PROJECT_DEPENDENCIES,\n      ])\n      dependenciesSpinner.succeed()\n\n      // Ensure styles directory exists.\n      if (!projectInfo?.appDir) {\n        const stylesDir = projectInfo?.srcDir ? \"./src/styles\" : \"./styles\"\n        if (!existsSync(path.resolve(stylesDir))) {\n          await fs.mkdir(path.resolve(stylesDir), { recursive: true })\n        }\n      }\n\n      // Update styles.css\n      let stylesDestination = projectInfo?.srcDir\n        ? \"./src/styles/globals.css\"\n        : \"./styles/globals.css\"\n      if (projectInfo?.appDir) {\n        stylesDestination = projectInfo?.srcDir\n          ? \"./src/app/globals.css\"\n          : \"./app/globals.css\"\n      }\n      const stylesSpinner = ora(`Adding styles with CSS variables...`).start()\n      await fs.writeFile(stylesDestination, STYLES, \"utf8\")\n      stylesSpinner.succeed()\n\n      // Ensure lib directory exists.\n      const libDir = projectInfo?.srcDir ? \"./src/lib\" : \"./lib\"\n      if (!existsSync(path.resolve(libDir))) {\n        await fs.mkdir(path.resolve(libDir), { recursive: true })\n      }\n\n      // Create lib/utils.ts\n      const utilsDestination = projectInfo?.srcDir\n        ? \"./src/lib/utils.ts\"\n        : \"./lib/utils.ts\"\n      const utilsSpinner = ora(`Adding utils...`).start()\n      await fs.writeFile(utilsDestination, UTILS, \"utf8\")\n      utilsSpinner.succeed()\n\n      const tailwindDestination = \"./tailwind.config.js\"\n      const tailwindSpinner = ora(`Updating tailwind.config.js...`).start()\n      await fs.writeFile(tailwindDestination, TAILWIND_CONFIG, \"utf8\")\n      tailwindSpinner.succeed()\n    })\n\n  program\n    .command(\"add\")\n    .description(\"add components to your project\")\n    .argument(\"[components...]\", \"name of components\")\n    .action(async (components: string[]) => {\n      logger.warn(\n        \"Running the following command will overwrite existing files.\"\n      )\n      logger.warn(\n        \"Make sure you have committed your changes before proceeding.\"\n      )\n      logger.warn(\"\")\n\n      const availableComponents = await getAvailableComponents()\n\n      if (!availableComponents?.length) {\n        logger.error(\n          \"An error occurred while fetching components. Please try again.\"\n        )\n        process.exit(0)\n      }\n\n      let selectedComponents = availableComponents.filter((component) =>\n        components.includes(component.component)\n      )\n\n      if (!selectedComponents?.length) {\n        selectedComponents = await promptForComponents(availableComponents)\n      }\n\n      const dir = await promptForDestinationDir()\n\n      if (!selectedComponents?.length) {\n        logger.warn(\"No components selected. Nothing to install.\")\n        process.exit(0)\n      }\n\n      // Create componentPath directory if it doesn't exist.\n      const destinationDir = path.resolve(dir)\n      if (!existsSync(destinationDir)) {\n        const spinner = ora(`Creating ${dir}...`).start()\n        await fs.mkdir(destinationDir, { recursive: true })\n        spinner.succeed()\n      }\n\n      logger.success(\n        `Installing ${selectedComponents.length} component(s) and dependencies...`\n      )\n      for (const component of selectedComponents) {\n        const componentSpinner = ora(`${component.name}...`).start()\n\n        // Write the files.\n        for (const file of component.files) {\n          // Replace alias with the project's alias.\n          if (projectInfo?.alias) {\n            file.content = file.content.replace(/@\\//g, projectInfo.alias)\n          }\n\n          const filePath = path.resolve(dir, file.name)\n          await fs.writeFile(filePath, file.content)\n        }\n\n        // Install dependencies.\n        if (component.dependencies?.length) {\n          await execa(packageManager, [\n            packageManager === \"npm\" ? \"install\" : \"add\",\n            ...component.dependencies,\n          ])\n        }\n        componentSpinner.succeed(component.name)\n      }\n    })\n\n  program.parse()\n}\n\nasync function promptForComponents(components: Component[]) {\n  const { components: selectedComponents } = await prompts({\n    type: \"autocompleteMultiselect\",\n    name: \"components\",\n    message: \"Which component(s) would you like to add?\",\n    hint: \"Space to select. A to select all. I to invert selection.\",\n    instructions: false,\n    choices: components.map((component) => ({\n      title: component.name,\n      value: component,\n    })),\n  })\n\n  return selectedComponents\n}\n\nasync function promptForDestinationDir() {\n  const { dir } = await prompts([\n    {\n      type: \"text\",\n      name: \"dir\",\n      message: \"Where would you like to install the component(s)?\",\n      initial: \"./components/ui\",\n    },\n  ])\n\n  return dir\n}\n\nmain()\n","import fetch from \"node-fetch\"\nimport * as z from \"zod\"\n\nconst baseUrl = process.env.COMPONENTS_BASE_URL ?? \"https://ui.shadcn.com\"\n\nconst componentSchema = z.object({\n  component: z.string(),\n  name: z.string(),\n  dependencies: z.array(z.string()).optional(),\n  files: z.array(\n    z.object({\n      name: z.string(),\n      dir: z.string(),\n      content: z.string(),\n    })\n  ),\n})\n\nexport type Component = z.infer<typeof componentSchema>\n\nconst componentsSchema = z.array(componentSchema)\n\nexport async function getAvailableComponents() {\n  try {\n    const response = await fetch(`${baseUrl}/api/components`)\n    const components = await response.json()\n\n    return componentsSchema.parse(components)\n  } catch (error) {\n    throw new Error(\n      `Failed to fetch components from ${baseUrl}/api/components.`\n    )\n  }\n}\n","import path from \"path\"\nimport fs from \"fs-extra\"\nimport { type PackageJson } from \"type-fest\"\n\nexport function getPackageInfo() {\n  const packageJsonPath = path.join(\"package.json\")\n\n  return fs.readJSONSync(packageJsonPath) as PackageJson\n}\n","export function getPackageManager() {\n  const userAgent = process.env.npm_config_user_agent\n\n  if (!userAgent) {\n    return \"npm\"\n  }\n\n  if (userAgent.startsWith(\"yarn\")) {\n    return \"yarn\"\n  }\n\n  if (userAgent.startsWith(\"pnpm\")) {\n    return \"pnpm\"\n  }\n\n  return \"npm\"\n}\n","import { existsSync } from \"fs\"\nimport path from \"path\"\nimport fs from \"fs-extra\"\n\nexport async function getProjectInfo() {\n  const info = {\n    tsconfig: null,\n    alias: null,\n    srcDir: false,\n    appDir: false,\n  }\n\n  try {\n    const tsconfig = await getTsConfig()\n    const paths = tsconfig?.compilerOptions?.paths\n    const alias = paths ? Object.keys(paths)[0].replace(\"*\", \"\") : null\n\n    return {\n      tsconfig,\n      alias,\n      srcDir: existsSync(path.resolve(\"./src\")),\n      appDir:\n        existsSync(path.resolve(\"./app\")) ||\n        existsSync(path.resolve(\"./src/app\")),\n    }\n  } catch (error) {\n    return info\n  }\n}\n\nexport async function getTsConfig() {\n  try {\n    const tsconfigPath = path.join(\"tsconfig.json\")\n    const tsconfig = await fs.readJSON(tsconfigPath)\n\n    if (!tsconfig) {\n      throw new Error(\"tsconfig.json is missing\")\n    }\n\n    return tsconfig\n  } catch (error) {\n    return null\n  }\n}\n","import chalk from \"chalk\"\n\nexport const logger = {\n  error(...args: unknown[]) {\n    console.log(chalk.red(...args))\n  },\n  warn(...args: unknown[]) {\n    console.log(chalk.yellow(...args))\n  },\n  info(...args: unknown[]) {\n    console.log(chalk.cyan(...args))\n  },\n  success(...args: unknown[]) {\n    console.log(chalk.green(...args))\n  },\n}\n","export const STYLES = `@tailwind base;\n@tailwind components;\n@tailwind utilities;\n \n@layer base {\n  :root {\n    --background: 0 0% 100%;\n    --foreground: 222.2 47.4% 11.2%;\n \n    --muted: 210 40% 96.1%;\n    --muted-foreground: 215.4 16.3% 46.9%;\n \n    --popover: 0 0% 100%;\n    --popover-foreground: 222.2 47.4% 11.2%;\n \n    --card: 0 0% 100%;\n    --card-foreground: 222.2 47.4% 11.2%;\n \n    --border: 214.3 31.8% 91.4%;\n    --input: 214.3 31.8% 91.4%;\n \n    --primary: 222.2 47.4% 11.2%;\n    --primary-foreground: 210 40% 98%;\n \n    --secondary: 210 40% 96.1%;\n    --secondary-foreground: 222.2 47.4% 11.2%;\n \n    --accent: 210 40% 96.1%;\n    --accent-foreground: 222.2 47.4% 11.2%;\n \n    --destructive: 0 100% 50%;\n    --destructive-foreground: 210 40% 98%;\n \n    --ring: 215 20.2% 65.1%;\n \n    --radius: 0.5rem;\n  }\n \n  .dark {\n    --background: 224 71% 4%;\n    --foreground: 213 31% 91%;\n \n    --muted: 223 47% 11%;\n    --muted-foreground: 215.4 16.3% 56.9%;\n \n    --popover: 224 71% 4%;\n    --popover-foreground: 215 20.2% 65.1%;\n \n    --card: 224 71% 4%;\n    --card-foreground: 213 31% 91%;\n \n    --border: 216 34% 17%;\n    --input: 216 34% 17%;\n \n    --primary: 210 40% 98%;\n    --primary-foreground: 222.2 47.4% 1.2%;\n \n    --secondary: 222.2 47.4% 11.2%;\n    --secondary-foreground: 210 40% 98%;\n \n    --accent: 216 34% 17%;\n    --accent-foreground: 210 40% 98%;\n \n    --destructive: 0 63% 31%;\n    --destructive-foreground: 210 40% 98%;\n \n    --ring: 216 34% 17%;\n \n    --radius: 0.5rem;\n  }\n}\n \n@layer base {\n  * {\n    @apply border-border;\n  }\n  body {\n    @apply bg-background text-foreground;\n    font-feature-settings: \"rlig\" 1, \"calt\" 1;\n  }\n}`\n\nexport const UTILS = `import { ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n \nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n`\n\nexport const TAILWIND_CONFIG = `/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  darkMode: [\"class\"],\n  content: [\n    './pages/**/*.{ts,tsx}',\n    './components/**/*.{ts,tsx}',\n    './app/**/*.{ts,tsx}',\n\t],\n  theme: {\n    container: {\n      center: true,\n      padding: \"2rem\",\n      screens: {\n        \"2xl\": \"1400px\",\n      },\n    },\n    extend: {\n      colors: {\n        border: \"hsl(var(--border))\",\n        input: \"hsl(var(--input))\",\n        ring: \"hsl(var(--ring))\",\n        background: \"hsl(var(--background))\",\n        foreground: \"hsl(var(--foreground))\",\n        primary: {\n          DEFAULT: \"hsl(var(--primary))\",\n          foreground: \"hsl(var(--primary-foreground))\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary))\",\n          foreground: \"hsl(var(--secondary-foreground))\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive))\",\n          foreground: \"hsl(var(--destructive-foreground))\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted))\",\n          foreground: \"hsl(var(--muted-foreground))\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent))\",\n          foreground: \"hsl(var(--accent-foreground))\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover))\",\n          foreground: \"hsl(var(--popover-foreground))\",\n        },\n        card: {\n          DEFAULT: \"hsl(var(--card))\",\n          foreground: \"hsl(var(--card-foreground))\",\n        },\n      },\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: { height: 0 },\n          to: { height: \"var(--radix-accordion-content-height)\" },\n        },\n        \"accordion-up\": {\n          from: { height: \"var(--radix-accordion-content-height)\" },\n          to: { height: 0 },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\")],\n}`\n"],"mappings":"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","names":["existsSync","fs","path","path","fs","existsSync","path","fs"]}